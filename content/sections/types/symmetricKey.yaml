title: SymmetricKey
prototype: "[`Key`]()"
prose: |
  The key type used to perform [symmetric encryption]().

  > **Warning:** This key must remain secret for encryption be effective.

  `SharedKey` extends [`Key`](), so it inherits its inteface: (Please see that class for more details.)
  - `to`: instance method to return formatted internal data. `to` returns the key itself, in whichever format you request.
  - `isKind`: static method providing a boolean prototype chain check for `Key`

  `SharedKey` extends that interface with:
  - `create`: static method to generate an instance of `SymmetricKey` suitable for [symmetric encryption]()
  - `from`: static method to hydrate an instance of `SymmetricKey` from data
  - `isType`: static method providing a boolean type-check for `SymmetricKey`

properties: false
staticMethods:
  create:
    signatures:
      - inputs: []
        output: symmetric-key
    variables:
      symmetric-key:
        isPromised: true
        type: "[`SymmetricKey`]()"
        description: |
          Promise that resolves to an instance of [`SymmetricKey`]().
    prose: |
      Generates a new `SymmetricKey`.  Randomly generates a key using the [`randomBytes`]() interface.

  isType:
    signatures:
      - inputs: [ value ]
        output: is-symmetric-key
    variables:
      value:
        type: Value
        description: |
          A value to be tested.
      is-symmetric-key:
        type: "[`Boolean`]()"
        description: |
          `true` if `value` is an instance of [`SymmetricKey`](), `false` otherwise.
    prose: |
      Type check on `value` to see if it is an instance of `SymmetricKey`.  Returns `true` or `false`.

  from:
    signatures:
      - inputs: [ hint, data ]
        output: key
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the `from` conversion hint.
      data:
        type: "[`String`]() | [`Uint8Array`]() | [`Buffer`]()"
        description: |
          A data representation of a symmetric key.
      key:
        type: "[`SymmetricKey`]()"
        description: |
          Instance of [`SymmetricKey`](), hydrated by the input `data`.
    prose: |
      Hydrates an instance of `SymmetricKey` from given `data`.

      `hint` informs `from` how convert `data` into `SymmetricKey`'s internal reprentation.

      #### Supported Hints
      - `bytes`: A byte array, specifically [`Uint8Array`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.

      If `hint` conflicts with `data`'s type (ex: `data` is a byte array, while `hint` is "string"), `from` thows.

instanceMethods: false
