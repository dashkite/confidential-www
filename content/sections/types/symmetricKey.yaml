title: SymmetricKey
prototype: "[`Key`]()"
prose: |
  The key type used to perform [symmetric encryption]().

  > **Warning:** This key must remain secret for encryption be effective.

  Because this type extends [`Key`](), you may:
  - manage `SymmetricKey` serialization through the `to` and `from` methods.
  - check if this key is _any_ type of instanciated [`Key`]() through the `isKind` method.

  This class adds to the method interface with:
  - `create`: static method to generate a symmetric key suitable for [symmetric encryption]()
  - `isType`: static method to type check specifically on `SymmetricKey`

properties: false
staticMethods:
  create:
    signature:
      - inputs: []
        output: symmetric-key
    variables:
      symmetric-key:
        isPromised: true
        type: "`SymmetricKey`"
        description: |
          Promise that resolves to an instance of `SymmetricKey`.
    prose: |
      Generate a new `SymmetricKey`.  Randomly generates a key using the [`randomBytes`]() interface.

  isType:
    signature:
      - inputs: [ value ]
        output: is-symmetric-key
    variables:
      value:
        type: Value
        description: |
          A value to be tested.
      is-symmetric-key:
        type: "[`Boolean`]()"
        description: |
          `true` if `value` is an instance of [`SymmetricKey`](), `false` otherwise.
    prose: |
      Type checks on `value` to see if it is an instance of `SymmetricKey`.  Returns `true` or `false`.

instanceMethods: false
