title: KeyPair
prototype: false
prose: |
  Base class for all key pairs in Panda-Confidential. Stores a pair of algorithmically related keys, the [`PrivateKey`]() and [`PublicKey`]() instances.

  This class contains a method interface for managing the serialization of `KeyPair`s.

  Normally, you should not require the direct use of this class. But all other key pairs inherit its interface.

properties:
  privateKey:
    type: "[`PrivateKey`]()"
    description: |
      The private key of this key pair.
  publicKey:
    type: "[`PublicKey`]()"
    description: |
      The public key of this key pair.

staticMethods:
  from:
    signature:
      - inputs: [ hint, data ]
        output: key-pair
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the input hint.
      data:
        type: "[`String`]() | [`Uint8Array`]() | [`Buffer`]() | [`Object`]()"
        description: |
          A representation of the data of a key-pair.
      key-pair:
        type: "[`KeyPair`]()"
        description: |
          The key-pair in an encoded form for transport or storage.
    prose: |
      Returns an instanciated `KeyPair` based on the value of `data`.

      `hint` tells `from` how convert the value into `KeyPair`'s internal reprentation.

      #### Supported Types
      - `bytes`: A byte array, specifically [`Uint8Array`]() or its equivalent in Node.js [`Buffer`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.

      If `hint` conflicts with `data`'s type (ex: `data` is a byte array, while `hint` is "string"), `from` thows.

  isKind:
    signature:
      - inputs: [ value ]
        output: is-key-pair
    variables:
      value:
        type: Value
        description: |
          A value to be tested.
      is-key-pair:
        type: "[`Boolean`]()"
        description: |
          `true` if `value` has the `KeyPair` in its prototype chain, `false` otherwise.
    prose: |
      Type check method to determine if the input `value` is an instance of `KeyPair` or has inherited from one in its prototype.  Returns `true` or `false`.
instanceMethods:
  to:
    signature:
      - inputs: [ hint ]
        output: encoded-key-pair
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the output encoding.
      encoded-key-pair:
        type: "[`String`]() | [`Uint8Array`]()"
        description: |
          The key-pair in an encoded form for transport or storage.
    prose:  |
      Outputs this instance's value in the form specified in `hint`.

      #### Supported Types
      - `bytes`: A byte array, specifically [`Uint8Array`]() or its equivalent in Node.js [`Buffer`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.
