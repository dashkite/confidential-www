title: EncryptionKeyPair
prototype: "[`KeyPair`]()"
prose: |
  Key pair suitable for [asymmetric encryption]().

  > **Warning:** `EncryptionKeyPair` is not suitable for signing.

  `EncryptionKeyPair` extends [`KeyPair`](), so it inherits its inteface: (Please see that class for more details.)
  - `to`: instance method to return formatted internal data.
  - `isKind`: static method providing a boolean prototype chain check for `KeyPair`

  `EncryptionKeyPair` extends that interface with:
  - `create`: static method to generate an instance of `EncryptionKeyPair`, suitable for encryption.
  - `from`: static method to hydrate an instance of `EncryptionKeyPair` from data
  - `isType`: static method providing a boolean type-check for `EncryptionKeyPair`

properties: false
staticMethods:
  create:
    signatures:
      - inputs: []
        output: encryption-key-pair
    variables:
      encryption-key-pair:
        isPromised: true
        type: "[`EncryptionKeyPair`]()"
        description: |
          Promise that resolves to an instance of [`EncryptionKeyPair`]().
    prose: |
      Generates a new `EncryptionKeyPair`.  Randomly generates a pair of algorithmically related keys using the [`randomBytes`]() interface.

  isType:
    signatures:
      - inputs: [ value ]
        output: is-encryption-key-pair
    variables:
      value:
        type: Value
        description: |
          A value to be tested.
      is-encryption-key-pair:
        type: "[`Boolean`]()"
        description: |
          `true` if `value` is an instance of [`EncryptionKeyPair`](), `false` otherwise.
    prose: |
      Type check on `value` to see if it is an instance of `EncryptionKeyPair`.  Returns `true` or `false`.

  from:
    signatures:
      - inputs: [ hint, data ]
        output: key-pair
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the `from` conversion hint.
      data:
        type: "[`String`]() | [`Uint8Array`]() | [`Buffer`]()"
        description: |
          A data representation of a encryption key pair.
      key-pair:
        type: "[`EncryptionKeyPair`]()"
        description: |
          Instance of [`EncryptionKeyPair`](), hydrated by the input `data`.
    prose: |
      Hydrates an instance of `EncryptionKeyPair` from given `data`.

      `hint` informs `from` how convert `data` into `EncryptionKeyPair`'s internal reprentation.

      #### Supported Hints
      - `bytes`: A byte array, specifically [`Uint8Array`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.

      If `hint` conflicts with `data`'s type (ex: `data` is a byte array, while `hint` is "string"), `from` thows.

instanceMethods: false
