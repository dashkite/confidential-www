title: Nonce
prototype: false
prose: |
  `Nonce` is a wrapper for the given nonce of random bytes.  `Nonce` contains a method interface for managing the formatting. Invoking the `to` method on an instance of this class returns the nonce itself, in whichever format you request.

properties:
  nonce:
    type: "[`Uint8Array`]()"
    description: |
      The value of this nonce.

staticMethods:
  isType:
    signatures:
      - inputs: [ value ]
        output: is-nonce
    variables:
      value:
        type: Value
        description: |
          A value to be tested.
      is-nonce:
        type: "[`Boolean`]()"
        description: |
          `true` if `value` has the `Has` in its prototype chain, `false` otherwise.
    prose: |
      Type check method to determine if the input `value` is an instance of `Nonce`.  Returns `true` or `false`.

  from:
    signatures:
      - inputs: [ hint, data ]
        output: nonce
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the input hint.
      data:
        type: "[`String`]() | [`Uint8Array`]() | [`Buffer`]()"
        description: |
          A representation of the data of a nonce.
      nonce:
        type: "[`Nonce`]()"
        description: |
          The nonce in an encoded form for transport or storage.
    prose: |
      Returns an instanciated `Nonce` based on the value of `data`.

      `hint` tells `from` how convert the value into `Nonce`'s internal reprentation.

      #### Supported Types
      - `bytes`: A byte array, specifically [`Uint8Array`]() or its equivalent in Node.js [`Buffer`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.

      If `hint` conflicts with `data`'s type (ex: `data` is a byte array, while `hint` is "string"), `from` thows.

instanceMethods:
  to:
    signatures:
      - inputs: [ hint ]
        output: encoded-nonce
    variables:
      hint:
        type: "[`String`]()"
        description: |
          name that specifies the output encoding.
      encoded-nonce:
        type: "[`String`]() | [`Uint8Array`]()"
        description: |
          The nonce in an encoded form for transport or storage.
    prose:  |
      Outputs this instance's value in the form specified in `hint`.

      #### Supported Types
      - `bytes`: A byte array, specifically [`Uint8Array`]() or its equivalent in Node.js [`Buffer`]()
      - `utf8`: A [`String`]() with [UTF-8 encoding]()
      - `base64`: A [`String`]() with [Base64 encoding]()
      - `safe-base64`: A [`String`]() with [URL-Safe Base64 encoding]()

      Specifying an unsupported conversion throws.
