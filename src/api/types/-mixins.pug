mixin signatures()

  each signature in signatures
    blockquote.signature
      p
        if scope == "class"
          strong= `${type.name}.${name}`
        else
          strong= `${type.key}.${name}`
        |
        |
        = signature.arguments
        |
        | &rarr;
        |
        = signature.result
  

mixin method-variables()

  table
    thead
      tr
        th name
        th type
        th description
    
    tbody   
      tr
        td= type.key
        td: a(href=`/api/types/${type.key}`): code= type.name
        td An instance of #{type.name}.
        
      each variable, _name in variables
        tr
          td= _name
          td!= $helpers.markdown(variable.type)
          td!= $helpers.markdown(variable.description)



mixin variables()

  table
    thead
      tr
        th name
        th type
        th description
    
    tbody
      each variable, _name in variables
        tr
          td= _name
          td!= $helpers.markdown(variable.type)
          td!= $helpers.markdown(variable.description)

mixin method()

  h1= `${type.key}.${name}`
  
  != $helpers.markdown(summary)
  
  +signatures()
  +method-variables()

  block
    
mixin methods(scope)
  - var methods = $helpers.getMethods(key, scope)
  ul
    each method, _name in methods
      - var link = $site.links["`"+ name + "`"] + "/" + method.key
      li: a(href=link)= _name

mixin properties(scope)
  - variables = $helpers.getProperties(key, scope)
  if Object.entries(variables).length == 0
    p There are no #{scope} properties.
  else
    +variables()
      
mixin interface-list()
  ul
    each key in Object.keys(type).sort()
      if type[key].name
        - var i = type[key]
        if i.name == name
          li: strong= i.name
        else
          if i.category == "method"
            li: a(href=`/api/types/${type.key}/${key}`)= i.name
          else if i.category == "property"
            li: a(href=`/api/types/${type.key}#properties`)= i.name
            
