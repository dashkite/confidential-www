::
readyMethod = (title, data) ->
  data.title = title
  data.table = _preprocess.readySignatureTable data.variables
  data.signatures = _preprocess.readySignatures title, data.signatures
  if data.examples?
    data.examples = _preprocess.readyExamples data.examples
  data

prepare = (data) ->
  data.properties = _preprocess.readyPropertiesTable data.properties
  if data.staticMethods?
    data.staticMethods =
      for title, value of data.staticMethods
        readyMethod title, value
  if data.instanceMethods?
    data.instanceMethods =
      for title, value of data.instanceMethods
        readyMethod title, value
  data

atomic = $ (name) ->
  template = _read "templates/atoms/types.pug.hbs"
  data = prepare _yaml _read "content/sections/types/#{name}.yaml"
  _T.render template, data
::


section
  h1#types Types

  ::
  $prose "Classes in panda-confidential are lightweight wrappers for values.
    They provide a type-system to support the generics ([`encrypt`](),
    [`decrypt`](), [`sign`](), [`verify`]()) and a couple of convenience
    methods. Their constructors ready values for use with the underlying
    TweetNaCl.js invocations ([`Uint8Array`]()).  But, you can use
    [`convert`]() to encode that value into a form that's easier for
    transport or store."
  ::

  ::
  atomic "plaintext"
  atomic "envelope"
  atomic "declaration"
  atomic "hash"
  atomic "nonce"

  atomic "key"
  atomic "symmetricKey"
  atomic "publicKey"
  atomic "privateKey"
  atomic "sharedKey"

  atomic "keyPair"
  atomic "encryptionKeyPair"
  atomic "signatureKeyPair"
  ::
